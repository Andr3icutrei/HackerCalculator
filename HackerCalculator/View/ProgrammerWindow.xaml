<Window x:Class="HackerCalculator.View.ProgrammerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HackerCalculator.ViewModel.Programmer"
        xmlns:shared="clr-namespace:HackerCalculator.ViewModel"
        mc:Ignorable="d"
        Title="ProgrammerMode" Height="535" Width="336"
        Background="Transparent"
        BorderThickness="1"
        BorderBrush="#FF20C20E"
        Name="Programmer"
        KeyDown="Window_KeyDown">

    <Window.DataContext>
        <local:ProgrammerViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <shared:FileOptionsViewModel x:Key="FileOptionsVM"/>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="4" />
            <Setter Property="Foreground" Value="#FF20C20E" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="FontFamily" Value="Consolas" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderBrush" Value="#FF20C20E" />
            <Setter Property="Background" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" 
                            CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF092E0A" />
                                <Setter Property="BorderBrush" Value="#FF35FF17" />
                                <Setter Property="Foreground" Value="#FF35FF17" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FF104210" />
                                <Setter Property="BorderBrush" Value="#FF7CFF69" />
                                <Setter Property="Foreground" Value="#FF7CFF69" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Background" Value="Black" />
            <Setter Property="Foreground" Value="#FF20C20E" />
            <Setter Property="BorderBrush" Value="#FF20C20E" />
            <Setter Property="FontFamily" Value="Consolas" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="5" />
        </Style>

        <Style TargetType="MenuItem">
            <Setter Property="Foreground" Value="#FF20C20E" />
            <Setter Property="Background" Value="Black" />
            <Setter Property="BorderBrush" Value="#FF20C20E" />
            <Setter Property="FontFamily" Value="Consolas" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF092E0A" />
                    <Setter Property="Foreground" Value="#FF35FF17" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Foreground" Value="#FF35FF17" />
            <Setter Property="FontFamily" Value="Consolas" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="0,5,5,5" />
        </Style>

        <Style TargetType="RadioButton">
            <Setter Property="Foreground" Value="#FF20C20E" />
            <Setter Property="Background" Value="Black" />
            <Setter Property="BorderBrush" Value="#FF20C20E" />
            <Setter Property="FontFamily" Value="Consolas" />
            <Setter Property="Padding" Value="5,3" />
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#FF35FF17" />
                    <Setter Property="Foreground" Value="#FF35FF17" />
                    <Setter Property="BorderBrush" Value="#FF35FF17" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF092E0A" />
                    <Setter Property="Foreground" Value="#FF35FF17" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ListBox">
            <Setter Property="Background" Value="Black" />
            <Setter Property="Foreground" Value="#FF20C20E" />
            <Setter Property="BorderBrush" Value="#FF20C20E" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontFamily" Value="Consolas" />
        </Style>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Gesture="Ctrl+C" Command="{Binding FileOptionsViewModel.CopyCommand}" CommandParameter="{Binding calculationsViewModel.calculation}" />
        <KeyBinding Gesture="Ctrl+X" Command="{Binding FileOptionsViewModel.CutCommand}" CommandParameter="{Binding calculationsViewModel.calculation}"/>
        <KeyBinding Gesture="Ctrl+V" Command="{Binding FileOptionsViewModel.PasteCommand}" CommandParameter="{Binding calculationsViewModel.calculation}"/>
    </Window.InputBindings>

    <Border Background="Black" BorderBrush="#FF20C20E" BorderThickness="1">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Background="#FF092E0A">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="[ HackerCalc v1.0 - PROGRAMMER ]" Foreground="#FF35FF17" Margin="10,5" FontFamily="Consolas" FontWeight="Bold"/>

                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <Button Content="_" Width="30" Height="25" FontSize="14" Margin="2,2,2,2" Click="MinimizeButton_Click"/>
                    <Button Content="×" Width="30" Height="25" FontSize="14" Margin="2,2,2,2" Click="CloseButton_Click"/>
                </StackPanel>
            </Grid>

            <DockPanel Grid.Row="1">
                <Menu DockPanel.Dock="Top" Background="Black" Foreground="#FF20C20E" BorderBrush="#FF20C20E" BorderThickness="0,0,0,1">
                    <MenuItem Header="[_File]">
                        <MenuItem Header="Cut" Command="{Binding FileOptionsViewModel.CutCommand}" 
                                  CommandParameter="{Binding CalculationsViewModel.calculation}" InputGestureText="Ctrl+X"/>
                        <MenuItem Header="Copy" Command="{Binding FileOptionsViewModel.CopyCommand}"
                                  CommandParameter="{Binding CalculationsViewModel.calculation}" InputGestureText="Ctrl+C"/>
                        <MenuItem Header="Paste" Command="{Binding FileOptionsViewModel.PasteCommand}"
                                  CommandParameter="{Binding CalculationsViewModel.calculation}" InputGestureText="Ctrl+V"/>
                    </MenuItem>
                    <MenuItem Header="[_Mode]">
                        <MenuItem Header="Switch to Standard" Click="ChangeWindow_Click"/>
                    </MenuItem>
                    <MenuItem Header="[_Help]">
                        <MenuItem Header="About" Click="About_Click"/>
                    </MenuItem>
                </Menu>
            </DockPanel>

            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="0" BorderBrush="#FF20C20E" BorderThickness="1" Margin="5" Padding="5" CornerRadius="3">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="0" Margin="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Content="[ FROM BASE ]" Foreground="#FF35FF17"/>
                            <ListBox Grid.Row="1" x:Name="listBoxFromBase" 
                                    ItemsSource="{Binding UiViewModel.BaseItems}" 
                                    SelectedItem="{Binding UiViewModel.SelectedFromBaseItem, Mode=TwoWay}"
                                    Background="Black" Foreground="#FF20C20E"
                                    BorderThickness="0">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListBoxItem">
                                                    <RadioButton Content="{Binding}"
                                                    GroupName="FromBaseGroup"
                                                    Foreground="#FF20C20E"
                                                    Margin="2,2,2,2" 
                                                    BorderBrush="#FF20C20E" 
                                                    BorderThickness="1"
                                                    IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected}"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </Grid>

                        <Grid Grid.Column="1" Margin="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Content="[ TO BASE ]" Foreground="#FF35FF17"/>
                            <ListBox Grid.Row="1" x:Name="listBoxToBase"  
                                    ItemsSource="{Binding UiViewModel.BaseItems}" 
                                    SelectedItem="{Binding UiViewModel.SelectedToBaseItem, Mode=TwoWay}"
                                    Background="Black" Foreground="#FF20C20E"
                                    BorderThickness="0">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListBoxItem">
                                                    <RadioButton Content="{Binding}"
                                                    GroupName="ToBaseGroup"
                                                    Foreground="#FF20C20E"
                                                    Margin="2,2,2,2" 
                                                    BorderBrush="#FF20C20E" 
                                                    BorderThickness="1"
                                                    IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected}"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </Grid>
                    </Grid>
                </Border>

                <Border Grid.Row="1" BorderBrush="#FF20C20E" BorderThickness="1" Margin="5" Padding="5" CornerRadius="3">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBox Grid.Row="0" Name="TextBoxCalculation" 
                                Background="Black"
                                BorderThickness="0,0,0,1"
                                FontSize="16" 
                                Foreground="#FF92DE86" 
                                BorderBrush="#FF154D0C" 
                                TextAlignment="Right" 
                                IsReadOnly="True" 
                                Margin="0,0,0,5"
                                Padding="5"
                                Text="{Binding CalculationsViewModel.calculation.CompleteCalculation,UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBox Grid.Row="1" Name="TextBoxResult" 
                                Background="Black" 
                                BorderThickness="0"
                                FontSize="24" 
                                Foreground="#FF20C20E" 
                                TextAlignment="Right" 
                                IsReadOnly="True"
                                FontWeight="Bold"
                                Padding="5"
                                Text="{Binding CalculationsViewModel.Result,UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                </Border>

                <Border Grid.Row="2" BorderBrush="#FF20C20E" BorderThickness="1" Margin="5" Padding="5" CornerRadius="3">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto" MinWidth="44"/>
                        </Grid.ColumnDefinitions>

                        <ItemsControl Grid.Column="0" Name="MatrixButtons" ItemsSource="{Binding UiViewModel.ButtonsData}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ItemsControl ItemsSource="{Binding}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                </Grid>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>

                                        <ItemsControl.ItemContainerStyle>
                                            <Style TargetType="ContentPresenter">
                                                <Setter Property="Grid.Column" Value="{Binding RelativeSource={RelativeSource Self}, Path=(ItemsControl.AlternationIndex)}"/>
                                            </Style>
                                        </ItemsControl.ItemContainerStyle>

                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Button Content="{Binding Content}" IsEnabled="{Binding IsEnabled}"
                                                        Command="{Binding DataContext.ButtonClickCommand, 
                                                        RelativeSource={RelativeSource AncestorType=Window}}"
                                                        CommandParameter="{Binding Content}"/>      
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>

                                        <ItemsControl.AlternationCount>4</ItemsControl.AlternationCount>
                                    </ItemsControl>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>

                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="Grid.Row" Value="{Binding RelativeSource={RelativeSource Self}, Path=(ItemsControl.AlternationIndex)}"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>

                            <ItemsControl.AlternationCount>5</ItemsControl.AlternationCount>
                        </ItemsControl>

                        <ItemsControl Name="OperatorsButtons" ItemsSource="{Binding UiViewModel.OperatorsData}" Margin="2,0,0,0" Grid.Column="1">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ItemsControl ItemsSource="{Binding}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                </Grid>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>

                                        <ItemsControl.ItemContainerStyle>
                                            <Style TargetType="ContentPresenter">
                                                <Setter Property="Grid.Column" Value="{Binding RelativeSource={RelativeSource Self}, Path=(ItemsControl.AlternationIndex)}"/>
                                            </Style>
                                        </ItemsControl.ItemContainerStyle>

                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Button Content="{Binding Content}" IsEnabled="{Binding IsEnabled}"
                                                        Command="{Binding DataContext.ButtonClickCommand, 
                                                        RelativeSource={RelativeSource AncestorType=Window}}"
                                                        CommandParameter="{Binding Content}"/>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>

                                        <ItemsControl.AlternationCount>1</ItemsControl.AlternationCount>
                                    </ItemsControl>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>

                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="Grid.Row" Value="{Binding RelativeSource={RelativeSource Self}, Path=(ItemsControl.AlternationIndex)}"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>

                            <ItemsControl.AlternationCount>3</ItemsControl.AlternationCount>
                        </ItemsControl>
                    </Grid>
                </Border>

            </Grid>
        </Grid>
    </Border>
</Window>